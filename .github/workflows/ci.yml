# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      build: ${{ steps.filter.outputs.backend }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            build:
              - 'package.json'
              - '**/package.json'
              - 'src/**'
              - 'public/**'
              - '.github/workflows/ci.yml'

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.build == 'true' }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # yarn cache files are stored in `~/.yarn` on Linux/macOS
          path: ~/.yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install
        run: yarn

      - name: build
        run: yarn run build

      - name: replace docs with new dist
        run: |
          rm -r docs
          mv dist docs


      - name: Add & Commit
        uses: EndBug/add-and-commit@v5.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          message: "Replace docs with latests dist"




